using System.Numerics;

namespace EtherSharp.ABI.Encode.Interfaces;
public partial interface IDynamicTupleEncoder 
{
    public IDynamicTupleEncoder Int8Array(params sbyte[] value);
    public IDynamicTupleEncoder UInt8Array(params byte[] value);

    public IDynamicTupleEncoder Int16Array(params short[] value);
    public IDynamicTupleEncoder UInt16Array(params ushort[] value);

<#
    for(var i = 24; i <= 32;i=i+8)
    {
#>
    public IDynamicTupleEncoder Int<#=i#>Array(params int[] value);
    public IDynamicTupleEncoder UInt<#=i#>Array(params uint[] value);
<#
    }
#>
<#
    for(var i = 40; i <= 64;i=i+8)
    {
#>
    public IDynamicTupleEncoder Int<#=i#>Array(params long[] value);
    public IDynamicTupleEncoder UInt<#=i#>Array(params ulong[] value);
<#
    }
#>
<#
    for(var i = 72; i <= 256;i=i+8)
    {
#>
    public IDynamicTupleEncoder Int<#=i#>Array(params BigInteger[] value);
    public IDynamicTupleEncoder UInt<#=i#>Array(params BigInteger[] value);
<#
    }
#>
}

