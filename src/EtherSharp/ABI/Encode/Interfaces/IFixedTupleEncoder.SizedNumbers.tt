using System.Numerics;

namespace EtherSharp.ABI.Encode.Interfaces;
public partial interface IFixedTupleEncoder 
{
    public IFixedTupleEncoder Int8(sbyte value);
    public IFixedTupleEncoder UInt8(byte value);

    public IFixedTupleEncoder Int16(short value);
    public IFixedTupleEncoder UInt16(ushort value);

<#
    for(var i = 24; i <= 32;i=i+8)
    {
#>
    public IFixedTupleEncoder Int<#=i#>(int value);
    public IFixedTupleEncoder UInt<#=i#>(uint value);
<#
    }
#>
<#
    for(var i = 40; i <= 64;i=i+8)
    {
#>
    public IFixedTupleEncoder Int<#=i#>(long value);
    public IFixedTupleEncoder UInt<#=i#>(ulong value);
<#
    }
#>
<#
    for(var i = 72; i <= 256;i=i+8)
    {
#>
    public IFixedTupleEncoder Int<#=i#>(BigInteger value);
    public IFixedTupleEncoder UInt<#=i#>(BigInteger value);
<#
    }
#>
}