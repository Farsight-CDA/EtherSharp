<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System" #>
using EtherSharp.ABI.Fixed;
using EtherSharp.ABI.Encode.Interfaces;

namespace EtherSharp.ABI;
public partial class AbiEncoder
{
    public AbiEncoder Bytes1(byte value)
        => AddElement(new FixedType<object>.Byte(value));    
    IFixedTupleEncoder IFixedTupleEncoder.Bytes1(byte value)
        => Bytes1(value);    
    IDynamicTupleEncoder IDynamicTupleEncoder.Bytes1(byte value)
        => Bytes1(value);
<#
    for(var i = 2; i <= 32;i=i+1)
    {
#>
    public AbiEncoder Bytes<#=i#>(params byte[] value)
        => AddElement(new FixedType<object>.Bytes(value, <#=i#>));
    IFixedTupleEncoder IFixedTupleEncoder.Bytes<#=i#>(params byte[] value)
        => Bytes<#=i#>(value);
    IDynamicTupleEncoder IDynamicTupleEncoder.Bytes<#=i#>(params byte[] value)
        => Bytes<#=i#>(value);
<#
    }
#>

}