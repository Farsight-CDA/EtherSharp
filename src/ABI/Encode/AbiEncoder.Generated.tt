<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System" #>
using EtherSharp.ABI.Fixed;
using System.Numerics;

namespace EtherSharp.ABI;
public partial class AbiEncoder
{
<#
    for(var i = 24; i <= 32;i=i+8)
    {
#>
    public AbiEncoder Int<#=i#>(int value)
    { 
        AddElement(new FixedType<string>.Int(value, <#=i#>));
        return this;
    }

    public AbiEncoder UInt<#=i#>(uint value)
    { 
        AddElement(new FixedType<string>.UInt(value, <#=i#>));
        return this;
    }

<#
    }
#>
<#
    for(var i = 40; i <= 64;i=i+8)
    {
#>
    public AbiEncoder Int<#=i#>(long value)
    { 
        AddElement(new FixedType<string>.Long(value, <#=i#>));
        return this;
    }

    public AbiEncoder UInt<#=i#>(ulong value)
    { 
        AddElement(new FixedType<string>.ULong(value, <#=i#>));
        return this;
    }

<#
    }
#>
<#
    for(var i = 72; i <= 256;i=i+8)
    {
#>
    public AbiEncoder Int<#=i#>(BigInteger value)
    { 
        AddElement(new FixedType<string>.BigInteger(value, false, <#=i#>));
        return this;
    }

    public AbiEncoder UInt<#=i#>(BigInteger value)
    { 
        AddElement(new FixedType<string>.BigInteger(value, true, <#=i#>));
        return this;
    }
<#
    }
#>
}